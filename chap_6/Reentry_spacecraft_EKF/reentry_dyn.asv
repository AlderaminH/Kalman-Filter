function x_next = reentry_dyn(x, Qd, dt, params, status)
%
%   reentry system model
%

% constants
R0 = params.R0;
H0 = params.H0;
beta0 = params.beta0;
mu = params.mu;

% sate variable x(k)
x1 = x(1);
x2 = x(2);
x3 = x(3);
x4 = x(4);
x5 = x(5);

% calculate parameters
R = sqrt(x1^2 + x2^2);
V = sqrt(x3^2 + x4^2);
beta = beta0 * exp(x5);
D = -beta * exp((R0 - R)/H0) * V;
G = -mu/(R^3);

% process noise
if status == 'sy'
    w = sqrt(Qd) * randn(3,1);
else
    w = zeros(3,1); % process noise is zero when kalman filter update
end

% x(k+1) = f(x(k)) + G*w(K)
x1_next = x1 + dt * x3;
x2_next = x2 + dt * x4;
x3_next = x3 + dt * (D *x3 + G * x1) 


end